# Gets your latest commits and lets you check them out (someone else wrote this mostly but I made it a bit better)
function GetLatestCommit() {
    # Set your Gerrit username and Gerrit server URL
    GERRIT_USERNAME="firstInit.lastName" # CHANGE ME
    GERRIT_SERVER="GERRIT SERVER WITH HTTPS" # CHANGE ME
    GERRIT_SERVER_NO_HTTPS="GERRIT SERVER NO HTTPS IN NAME" # CHANGE ME
    PORT="THE PORT" # CHANGE ME

    # Fetch the list of your open changes from Gerrit
    CHANGES_JSON=$(curl -s "${GERRIT_SERVER}/changes/?q=is:open+owner:${GERRIT_USERNAME}&o=CURRENT_REVISION" | sed '1d')

    # Parse the JSON to get change details and use fzf to select a commit
    SELECTED_COMMIT=$(echo "${CHANGES_JSON}" | jq -r '.[] | "\(._number)\t[\(.project)] \(.subject) \(.revisions | to_entries[0].value.ref)"' | fzf --height 40% --reverse)

    # Extract the project name, ref, and subject (commit message) from the selected commit
    PROJECT=$(echo "${SELECTED_COMMIT}" | awk '{print $2}' | tr -d '[]')
    REF=$(echo "${SELECTED_COMMIT}" | awk '{print $NF}')
    SUBJECT=$(echo "${SELECTED_COMMIT}" | awk '{$1=$1; print $0}' | cut -f3- -d$'\t')

    # Construct the git fetch command
    GIT_COMMAND="git fetch ssh://${GERRIT_USERNAME}@${GERRIT_SERVER_NO_HTTPS}:${PORT}/${PROJECT} ${REF}"
    echo "Executing: ${GIT_COMMAND}"
    eval "${GIT_COMMAND}"

    # Extract a ticket number or identifier from the commit message
    TICKET=$(echo "${SUBJECT}" | grep -oE '[A-Z]+-[0-9]+')
    BRANCH_NAME="feature/${TICKET}"

    # Check if TICKET was found; if not, use a default branch name
    if [[ -z "$TICKET" ]]; then
        echo "No ticket number found in the commit message. Using a default branch name."
        BRANCH_NAME="feature/$(date +%Y%m%d%H%M%S)"
    fi

    # Create and checkout a new branch with the extracted ticket number
    echo "Creating and checking out new branch: ${BRANCH_NAME}"
    git checkout -b "${BRANCH_NAME}" FETCH_HEAD
}
